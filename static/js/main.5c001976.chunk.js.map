{"version":3,"sources":["quotes.module.css","Quotation.js","App.js","index.js"],"names":["module","exports","Quotation","useState","data","setData","updateQuote","a","fetch","response","json","statusCode","statusMessage","ok","Error","console","error","content","useEffect","className","classes","Card","style","width","maxWidth","Body","author","title","Footer","Button","color","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,QAAU,0B,kMCgDbC,MA5Cf,WACE,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KADmB,SAGJC,IAHI,2EAGnB,oCAAAC,EAAA,+EAE2BC,MAAM,kCAFjC,cAEUC,EAFV,gBAGyDA,EAASC,OAHlE,mBAGYC,EAHZ,EAGYA,WAAYC,EAHxB,EAGwBA,cAAkBR,EAH1C,iBAISK,EAASI,GAJlB,uBAI4B,IAAIC,MAAJ,UAAaH,EAAb,YAA2BC,IAJvD,QAKIP,EAAQD,GALZ,kDAOIW,QAAQC,MAAR,MACAX,EAAQ,CAAEY,QAAS,iCARvB,2DAHmB,sBAmBnB,OAJAC,qBAAU,WACRZ,MACC,IAEEF,EAGH,qBAAKe,UAAWC,IAAQH,QAAxB,SACE,eAACI,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,MAAOC,SAAU,SAAvC,UACE,cAACH,EAAA,EAAKI,KAAN,UACE,6BAAYN,UAAU,kBAAtB,UACE,4BAAIf,EAAKa,UACRb,EAAKsB,QACJ,wBAAQP,UAAU,oBAAlB,SACE,sBAAMQ,MAAM,eAAZ,SAA4BvB,EAAKsB,gBAKzC,cAACL,EAAA,EAAKO,OAAN,UACE,cAACC,EAAA,EAAD,CAAQP,MAAO,CAAEQ,MAAO,cAAgBC,QAASzB,EAAjD,8BAhBU,MCVL0B,MAVf,WACE,OACE,8BAEE,cAAC,EAAD,OCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5c001976.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"quotes_content__1gcbQ\"};","import { React, useEffect, useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport classes from \"./quotes.module.css\";\n\nfunction Quotation() {\n  const [data, setData] = useState(null);\n\n  async function updateQuote() {\n    try {\n      const response = await fetch(\"https://api.quotable.io/random\");\n      const { statusCode, statusMessage, ...data } = await response.json();\n      if (!response.ok) throw new Error(`${statusCode} ${statusMessage}`);\n      setData(data);\n    } catch (error) {\n      console.error(error);\n      setData({ content: \"Opps... Something went wrong\" });\n    }\n  }\n\n  useEffect(() => {\n    updateQuote();\n  }, []);\n\n  if (!data) return null;\n\n  return (\n    <div className={classes.content}>\n      <Card style={{ width: \"90%\", maxWidth: \"40rem\" }}>\n        <Card.Body>\n          <blockquote className=\"blockquote mb-0\">\n            <p>{data.content}</p>\n            {data.author && (\n              <footer className=\"blockquote-footer\">\n                <cite title=\"Source Title\">{data.author}</cite>\n              </footer>\n            )}\n          </blockquote>\n        </Card.Body>\n        <Card.Footer>\n          <Button style={{ color: \"#f2f2f2git\" }} onClick={updateQuote}>\n            New Quote\n          </Button>\n        </Card.Footer>\n      </Card>\n    </div>\n  );\n}\n\nexport default Quotation;\n","import React from 'react'\nimport Quotation from './Quotation'\n\n\nfunction App() {\n  return (\n    <div>\n      \n      <Quotation/>\n      \n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n \nimport App from './App';\n \nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}